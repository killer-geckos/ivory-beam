name: Webserver deploy for production and API update

on:
  push:
    branches:
    - 'master'
    paths:
    - 'django-server/**'
    - '.github/workflows/server_deploy.yaml'
    - '.github/workflows/api_file_update.yaml'

jobs:
  build:
    name: Checkout and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}                                                              # checkout to branch which was pushed
      - name: Deploy to Heroku
        if: job.status == 'success'
        run: |
          rm -rf .git
          git clone https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/eaterslab.git # clone repo from heroku server
          cd eaterslab                                                                        # folder on deploy server
          find . -maxdepth 1 ! -path './.git' ! -path '.' -exec rm -rf {} +                   # remove all files excluding git repo info and current path
          git config --global user.email "${{ secrets.HEROKU_DEPLOY_EMAIL }}"                 # deploy as specified user
          git config --global user.name "${{ secrets.HEROKU_DEPLOY_NAME }}"
          git commit . -m "cleaned local repo"                                                # commit and push all files
          cp -r ../django-server/server/* ./                                                  # copy new version of server
          git add .
          git commit . -m "Deploy full refresh from ${{ github.ref }}"                        # commit and push all files
          git push
          cd ..
          rm -rf ./eaterslab
      - uses: actions/checkout@v2
        if: ${{ success() }}
      - name: Update API file
        if: ${{ success() }}
        run: |
          cd ./specs
          if wget https://eaterslab.herokuapp.com/api.yaml -O api_update.yaml; then
            rm -rf api.yaml
            mv api_update.yaml api.yaml
            echo "New API definition downloaded from server"
          else
            exit 1
          fi
      - name: Create Pull Request
        if: ${{ success() }}
        id: cpr
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update API file
          title: 'Update API file'
          body: |
            Update specs/api.yaml based on server newest version
          labels: django, automated, documentation
          assignees: avan1235
          reviewers: avan1235, kantoniak, Rhantolq
          draft: false
          branch: workflow/api-update
